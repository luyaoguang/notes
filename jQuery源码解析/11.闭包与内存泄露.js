//什么是内存泄露？
//内存泄露是程序中动态分配的内存，由于某种原因无法被回收。造成分配的内存无法释放，这种现象称为内存泄漏。

//什么是闭包？
//1.变量作用域
// 变量的作用域无非两种，全局作用域和局部作用域。
// js语言的特别之处就在于：函数内部可以读取全局变量，但是在函数外部不可以访问函数内部的局部变量。
//2.如何在函数外部读取函数内部变量？
// 在函数内部再声明一个函数。
function fn1() {
    var n = 111;
    function fn2() {
        console.log(n);
    }
    return fn2
}
var fn2 = fn1();
fn2(); //123
//在上述代码中 fn2被包含在fn1内部 这是fn1内部的所有局部变量对fn2是可见的。但是反过来fn2的内部变量对fn1是不可见的。
//子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。
//既然fn2可以读取fn1的局部变量，那么只需要把fn2作为返回值，我们不就可以再fn1外部读取它的内部变量了吗
//3.闭包的概念
// fn2就是闭包 在本质上，闭包是将函数内部和函数外部连接起来的桥梁。闭包就是能够读取其他函数内部变量的函数。闭包可以简单理解成“定义在一个函数内部的函数“。
//从广义角度来说 我们所有的函数都是global对象的闭包 


//js设计缺陷
var obj = {
    fn:function() {
        //this ==> obj
        return function() {
            //this ==> window
        }
    }
}
//箭头函数
var obj = {
    fn:function() {
        //this ==> obj
        return () =>{
            //this ==> obj
        }
    }
}

//闭包会造成内存泄露吗？
//只是由于IE9 之前的版本对JScript对象和COM对象使用不同的垃圾收集，从而导致内存无法进行回收。